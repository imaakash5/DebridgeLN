// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Script} from "forge-std/Script.sol";
import {Test, console} from "forge-std/Test.sol";
import {DlnSwapper, IDlnSource} from "../contracts/DlnSwapper.sol";
import {FeePool} from "../contracts/FeePool.sol";
import {console} from "forge-std/Test.sol";
// import "@openzeppelin/contracts/token/ERC20/IERC20.sol";
// import "@openzeppelin/contracts/utils/Base64.sol";

contract DeployContract is Script, Test {
    // using Base64 for bytes;
    //address usdcBase = address(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913);
    address usdcBase = address(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);
    IDlnSource.OrderCreation private order;
    DlnSwapper swapper;
    FeePool feepool;

    function run() external {
            uint privateKey = vm.envUint("DEV_PRIVATE_KEY");
            vm.startBroadcast(privateKey);
            console.log(vm.addr(privateKey), vm.addr(privateKey).balance);
            // feepool = new FeePool();
            swapper = new DlnSwapper(0xeF4fB24aD0916217251F553c0596F8Edc630EB66,3000,address(0x519bDc195187167Da07034402648D7C04E72b794));
            // swapper.updateAssetFee(usdcBase, 3e6);
            // swapper.updateAssetFee(address(0), 1e15);
            // swapper.setWhitelistedTarget(0xeF4fB24aD0916217251F553c0596F8Edc630EB66, true);
            // swapper.setWhitelistedTarget(0x663DC15D3C1aC63ff12E45Ab68FeA3F0a883C251, true);
            // assertEq(swapper.adminFee(), 3000);
            // assertEq(swapper.getFeePerAsset(usdcBase), 3e6);
            // assertEq(swapper.getFeePerAsset(address(0)), 1e15);
            vm.stopBroadcast();
            // console.log("Fee Pool:", address(feepool));
            console.log("DlnSwapper addr:", address(swapper));
            console.log(vm.addr(privateKey), vm.addr(privateKey).balance);
            // _withdrawETH();
            // swapUSDC();
            // swapETH();
    }

    function _withdrawETH() internal {
        
        uint privateKey = vm.envUint("DEV_PRIVATE_KEY");
        vm.startBroadcast(privateKey);
        console.log();
        swapper = DlnSwapper(payable(0x97d48fa4b62021fA5fd2EcB2B2c52bD70a819bDa));
        swapper.withdrawETH(vm.addr(privateKey), address(swapper).balance);
        assertEq(address(swapper).balance, 0);
    }

    function swapUSDC() internal {
        uint privateKey = vm.envUint("DEV_PRIVATE_KEY");
        vm.startBroadcast(privateKey);
        swapper = DlnSwapper(payable(0xA7cBc2bbEAEB50Ee254C8E5642849C3320847CcF));
        bytes memory data = "0x4d8160ba0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001550f7dca7000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000001111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000000000000000000160000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000000000000000000000000000000000000000d4eeff000000000000000000000000a7cbc2bbeaeb50ee254c8e5642849c3320847ccf000000000000000000000000ef4fb24ad0916217251f553c0596f8edc630eb6600000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022812aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000663dc15d3c1ac63ff12e45ab68fea3f0a883c251000000000000000000000000000000000000000000000000001550f7dca700000000000000000000000000000000000000000000000000000000000000d4eefe0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009b00000000000000000000000000000000000000000000000000007d00001a40414200000000000000000000000000000000000006d0e30db002a00000000000000000000000000000000000000000000000000000000000d37b20ee63c1e581b4cb800910b228ed3d0834cf79d697127bbb00e542000000000000000000000000000000000000061111111254eeb25477b68fb85ed929f73a9605820000000000fef84ee90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000404b930370100000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000191df75b1f70000000000000000000000000000000000000000000000000000000000000340000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003600000000000000000000000000000000000000000000000000000000000000380000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000000000000000000000000000000000000000d4eeff00000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000c204d80000000000000000000000000000000000000000000000000000000000736f6c00000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000a7cbc2bbeaeb50ee254c8e5642849c3320847ccf00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000020c6fa7af3bedbad3a3d65f36aabc97431b1bbe4c2d2f6e0e47ca60203452f5d610000000000000000000000000000000000000000000000000000000000000020791b1cd0bf1911f23a654432a7c09bfd32cc0dd5746b168d2ca732b7b63ed3430000000000000000000000000000000000000000000000000000000000000020791b1cd0bf1911f23a654432a7c09bfd32cc0dd5746b168d2ca732b7b63ed343000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000042010100000074c5a794e6de0100000000000000000000000000d804c2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        swapper.placeOrder{value: 1000000000000000}(data, payable(0xeF4fB24aD0916217251F553c0596F8Edc630EB66), 1000000000000000, usdcBase, 7766990);
    }

    function swapETH() internal {
        uint privateKey = vm.envUint("DEV_PRIVATE_KEY");
        vm.startBroadcast(privateKey);
        swapper = DlnSwapper(payable(0xA7cBc2bbEAEB50Ee254C8E5642849C3320847CcF));
        bytes memory data = "0x4d8160ba0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001550f7dca7000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000001111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000000000000000000160000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000000000000000000000000000000000000000d4fabe000000000000000000000000a7cbc2bbeaeb50ee254c8e5642849c3320847ccf000000000000000000000000ef4fb24ad0916217251f553c0596f8edc630eb6600000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022812aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000663dc15d3c1ac63ff12e45ab68fea3f0a883c251000000000000000000000000000000000000000000000000001550f7dca700000000000000000000000000000000000000000000000000000000000000d4fabd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009b00000000000000000000000000000000000000000000000000007d00001a40414200000000000000000000000000000000000006d0e30db002a00000000000000000000000000000000000000000000000000000000000d37beeee63c1e58172ab388e2e2f6facef59e3c3fa2c4e29011c2d3842000000000000000000000000000000000000061111111254eeb25477b68fb85ed929f73a9605820000000000fef84ee90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000404b930370100000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000191df7272690000000000000000000000000000000000000000000000000000000000000340000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003600000000000000000000000000000000000000000000000000000000000000380000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000000000000000000000000000000000000000d4fabe00000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000c2104b0000000000000000000000000000000000000000000000000000000000736f6c00000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000a7cbc2bbeaeb50ee254c8e5642849c3320847ccf00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000020c6fa7af3bedbad3a3d65f36aabc97431b1bbe4c2d2f6e0e47ca60203452f5d610000000000000000000000000000000000000000000000000000000000000020791b1cd0bf1911f23a654432a7c09bfd32cc0dd5746b168d2ca732b7b63ed3430000000000000000000000000000000000000000000000000000000000000020791b1cd0bf1911f23a654432a7c09bfd32cc0dd5746b168d2ca732b7b63ed3430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000420101000000bfd022ab10df01000000000000000000000000004b10c2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        swapper.placeOrder{value: 7180000000000000}(data, 0x663DC15D3C1aC63ff12E45Ab68FeA3F0a883C251, 7000000000000000, address(0), 6000000000000000);
    }

}
